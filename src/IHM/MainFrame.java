/**
 * Main frame of the application. We found all object existing in the metamodel
 */
package IHM;

import IHM.frameAdmin.FrameAdmin;
import IHM.frameObject.*;
import IHM.lookandfeel.LookAndFeelManage;
import data.IHM.DataIHM;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.*;
import javax.swing.tree.DefaultMutableTreeNode;
import launcherUsi.Launcher;
import myObject.*;
import plugin.IModule;
import plugin.ModuleLoader;

/**
 * Create a main frame witch data loaded
 * @author Mary
 */
public class MainFrame extends javax.swing.JFrame{

    /**
     * Creates new form MainFrame, load plugin and L&F
     */
    public MainFrame() {
       
        ModuleLoader.loadPlugin();
        initComponents();
        this.setTitle("Gestion MetaModel");
        setIcon();
        this.setLocationRelativeTo(null);
           
        if(Launcher.userConnected.getAdministrator() == false)
            jMenuCompte.setVisible(false);
        if(ModuleLoader.listModule.size() > 0){
            for(final IModule m : ModuleLoader.listModule)
            {
                ActionListener ls = new ActionListener() {

                   public void actionPerformed(ActionEvent e) {
                       m.start();
                   }
               };
                JMenuItem jm = new JMenuItem(m.getName());
                jm.addActionListener(ls);
               jMenuPlugin.add(jm);
               
            }
        }else
            jMenuPlugin.add(new JMenuItem("<Aucun pluging>"));
        
        for(final Object lf : LookAndFeelManage.nameLook.keySet())
            {
                ActionListener ls = new ActionListener() {

                   public void actionPerformed(ActionEvent e) {
                       LookAndFeelManage.changeLook((String) LookAndFeelManage.nameLook.get(lf));
                       JOptionPane.showMessageDialog(null,"Thème changé");
                   }
               };
                JMenuItem jm = new JMenuItem((String) lf);
                jm.addActionListener(ls);
               jMenuLook.add(jm);              
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        DefaultMutableTreeNode root;
        root = DataIHM.initTree();
        jTreeMetaModel = new javax.swing.JTree(root);
        jPanelView = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuObject = new javax.swing.JMenu();
        jMenuItemCreate = new javax.swing.JMenuItem();
        jMenuItemUpdate = new javax.swing.JMenuItem();
        jMenuItemDelete = new javax.swing.JMenuItem();
        jMenuItemDisplayView = new javax.swing.JMenuItem();
        jMenuAdministration = new javax.swing.JMenu();
        jMenuCompte = new javax.swing.JMenu();
        jMenuResponsable = new javax.swing.JMenu();
        jMenuPlugin = new javax.swing.JMenu();
        jMenuLook = new javax.swing.JMenu();
        jMenuHelp = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });
        addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                formPropertyChange(evt);
            }
        });

        jTreeMetaModel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTreeMetaModelMouseClicked(evt);
            }
        });
        jTreeMetaModel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTreeMetaModelFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(jTreeMetaModel);

        javax.swing.GroupLayout jPanelViewLayout = new javax.swing.GroupLayout(jPanelView);
        jPanelView.setLayout(jPanelViewLayout);
        jPanelViewLayout.setHorizontalGroup(
            jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 367, Short.MAX_VALUE)
        );
        jPanelViewLayout.setVerticalGroup(
            jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jMenuObject.setText("Objet");

        jMenuItemCreate.setText("Créer");
        jMenuItemCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCreateActionPerformed(evt);
            }
        });
        jMenuObject.add(jMenuItemCreate);

        jMenuItemUpdate.setText("Modifier");
        jMenuItemUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemUpdateActionPerformed(evt);
            }
        });
        jMenuObject.add(jMenuItemUpdate);

        jMenuItemDelete.setText("Supprimer");
        jMenuItemDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDeleteActionPerformed(evt);
            }
        });
        jMenuItemDelete.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jMenuItemDeleteKeyTyped(evt);
            }
        });
        jMenuObject.add(jMenuItemDelete);

        jMenuItemDisplayView.setText("Afficher vue");
        jMenuItemDisplayView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDisplayViewActionPerformed(evt);
            }
        });
        jMenuObject.add(jMenuItemDisplayView);

        jMenuBar1.add(jMenuObject);

        jMenuAdministration.setText("Administration");
        jMenuAdministration.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuAdministrationMouseClicked(evt);
            }
        });

        jMenuCompte.setText("Gerer Compte");
        jMenuCompte.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuCompteMouseClicked(evt);
            }
        });
        jMenuAdministration.add(jMenuCompte);

        jMenuResponsable.setText("Gerer Responsable");
        jMenuResponsable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuResponsableMouseClicked(evt);
            }
        });
        jMenuAdministration.add(jMenuResponsable);

        jMenuBar1.add(jMenuAdministration);

        jMenuPlugin.setText("Plugin");
        jMenuPlugin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuPluginMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenuPlugin);

        jMenuLook.setText("Look");
        jMenuBar1.add(jMenuLook);

        jMenuHelp.setText("?");
        jMenuHelp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuHelpMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 567, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTreeMetaModelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTreeMetaModelMouseClicked
        // TODO add your handling code here:
        // A supprimer
    }//GEN-LAST:event_jTreeMetaModelMouseClicked

    private void jTreeMetaModelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTreeMetaModelFocusGained
        // TODO add your handling code here:
        //A supprimer
    }//GEN-LAST:event_jTreeMetaModelFocusGained

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        //A supprimer
    }//GEN-LAST:event_formWindowGainedFocus

    private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged
        // TODO add your handling code here:
        //A supprimer
    }//GEN-LAST:event_formWindowStateChanged

    private void formPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_formPropertyChange
        // TODO add your handling code here:
        //A supprimer
    }//GEN-LAST:event_formPropertyChange

    /**
     * Windows reload her-self the JTree
     * @param evt 
     */
    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        
        jTreeMetaModel.setModel(new javax.swing.JTree(DataIHM.initTree()).getModel());
        SwingUtilities.updateComponentTreeUI(this);
    }//GEN-LAST:event_formWindowActivated

    private void jMenuAdministrationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuAdministrationMouseClicked
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jMenuAdministrationMouseClicked

    private void jMenuPluginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuPluginMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuPluginMouseClicked

    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowLostFocus

    /**
     * To call help window
     * @param evt on clic
     */
    private void jMenuHelpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuHelpMouseClicked
        Help win = new Help();
        win.setVisible(true);
        win.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_jMenuHelpMouseClicked

    /**
     * To call admin window
     * @param evt on clic
     */
    private void jMenuCompteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuCompteMouseClicked
        // TODO add your handling code here
         FrameAdmin win = new FrameAdmin();
        win.setVisible(true);
        win.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_jMenuCompteMouseClicked

    /**
     * To call responsible window
     * @param evt on clic
     */
    private void jMenuResponsableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuResponsableMouseClicked
        // TODO add your handling code here:
        FrameSetResponsable win = new FrameSetResponsable();
        win.setVisible(true);
        win.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_jMenuResponsableMouseClicked

    /**
     * To call draw window
     * @param evt on clic
     */
    private void jMenuItemDisplayViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDisplayViewActionPerformed
        // TODO add your handling code here:
        DefaultMutableTreeNode node = (DefaultMutableTreeNode)jTreeMetaModel.getLastSelectedPathComponent();
        if(node != null){
            if(node.getUserObject() instanceof Segment){
                Segment s = (Segment) node.getUserObject();
                ArrayList<String[]> zone = new ArrayList<String[]>();
                ArrayList<String> list = new ArrayList<String>();
                for(myObject.Process p : s.getListProcess()){
                    list.add(p.getName());
                    for(Capability c : data.IHM.DataIHM.getCapability(p.getId())){
                        list.add(c.getSurname());
                    }
                    zone.add(list.toArray(new String[list.size()]));
                    list = new ArrayList<String>();
                }
                LevelOf.Tab = new ArrayList<ArrayList<String>>();
                LevelOf.setNameLvl1(s.getName());
                LevelOf.setExported(true);
                DrawRect.Paint(zone);
            }else{
                JOptionPane.showMessageDialog(null, "Action possible seulement sur un objet de type zone");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Selectionnez d'abord un objet de type zone");

        }
    }//GEN-LAST:event_jMenuItemDisplayViewActionPerformed

    /**
     * To delete an object
     * @param evt on clic
     */
    private void jMenuItemDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDeleteActionPerformed
        // TODO add your handling code here:
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) jTreeMetaModel.getLastSelectedPathComponent();
        try{
            if(node != null){
                MetaModelObject __aucun = (MetaModelObject) node.getUserObject();
                if(__aucun.getName().equals("__Aucun"))
                JOptionPane.showMessageDialog(null,"Seul un panda peut le faire");
                else{
                    int dialogResult = JOptionPane.showConfirmDialog(null, "Êtes vous sur de vouloir supprimer l'objet " + node.toString());
                    {
                        MetaModelObject objectDelete = (MetaModelObject) node.getUserObject();
                        if(dialogResult == JOptionPane.YES_OPTION){
                            objectDelete.deleteObject();
                            JOptionPane.showMessageDialog(null,"Objet supprimé");
                        }
                    }
                }
            }else{
                JOptionPane.showMessageDialog(null,"Choisisez d'abord un objet à supprimer");
            }
        }catch(ClassCastException e){
            JOptionPane.showMessageDialog(null,"Ceci n'est pas un objet");
        }
    }//GEN-LAST:event_jMenuItemDeleteActionPerformed

    /**
     * To edit an object
     * @param evt on clic
     */
    private void jMenuItemUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemUpdateActionPerformed
        // TODO add your handling code here:
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) jTreeMetaModel.getLastSelectedPathComponent();
        try{
            if(node != null){
                MetaModelObject __aucun = (MetaModelObject) node.getUserObject();
                if(__aucun.getName().equals("__Aucun"))
                JOptionPane.showMessageDialog(null,"Seul un panda peut le faire");
                else{
                    if(node.getUserObject() instanceof Segment){
                        FrameSegment win = new FrameSegment((Segment) node.getUserObject());
                        win.setVisible(true);
                        win.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
                    }
                    else if(node.getUserObject() instanceof myObject.Process){
                        FrameProcessOrCpability win = new FrameProcessOrCpability((myObject.Process) node.getUserObject());
                        win.setVisible(true);
                        win.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
                    }
                    else if(node.getUserObject() instanceof Capability){
                        FrameProcessOrCpability win = new FrameProcessOrCpability((Capability) node.getUserObject());
                        win.setVisible(true);
                        win.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
                    }
                }
            } else{
                JOptionPane.showMessageDialog(null,"Choisisez d'abord un objet à modifier");
            }
        }catch(ClassCastException e){
            JOptionPane.showMessageDialog(null,"Ceci n'est pas un objet");
        }
    }//GEN-LAST:event_jMenuItemUpdateActionPerformed

    /**
     * To create an object
     * @param evt on clic
     */
    private void jMenuItemCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCreateActionPerformed
        // TODO add your handling code here:
        FrameNewObject win = new FrameNewObject();
        win.setVisible(true);
        win.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_jMenuItemCreateActionPerformed

    private void jMenuItemDeleteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jMenuItemDeleteKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemDeleteKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenuAdministration;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuCompte;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JMenuItem jMenuItemCreate;
    private javax.swing.JMenuItem jMenuItemDelete;
    private javax.swing.JMenuItem jMenuItemDisplayView;
    private javax.swing.JMenuItem jMenuItemUpdate;
    private javax.swing.JMenu jMenuLook;
    private javax.swing.JMenu jMenuObject;
    private javax.swing.JMenu jMenuPlugin;
    private javax.swing.JMenu jMenuResponsable;
    private javax.swing.JPanel jPanelView;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree jTreeMetaModel;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getClassLoader().getResource("usi.png")));
    }
}
